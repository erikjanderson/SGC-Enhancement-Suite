<?xml version="1.0" encoding="UTF-8"?><record_update table="cmdb_inst_application_feed">
    <cmdb_inst_application_feed action="DELETE">
        <active>true</active>
        <after_script><![CDATA[/**  * Script executed after calling the Identification and Reconciliation Engine (IRE)  *  * The following variables are available to the script:  *    'ireOutput' the array where each element of the array is an object representing the IRE output payload.  *    'ireInput' the array where each element of the array is an object representing the IRE input payload.  *    'runId' the current import set run id.  *      * Example:  */ // (function (ireOutput, ireInput, runId) { //      for (var i = 0; i < ireOutput.length; i++) { //          var output = ireOutput[i]; //          var items = output.items; //          for (var j = 0; j < items.length; j++) { //              gs.info(items[j].className + ': ' + items[j].sysId); //          } //      } // })(ireOutput, ireInput, runId); /**  *  * The following properties/functions are available for all parameters of type 'Array' inside the input and output payloads e.g. items, relations, referenceItems, lookup and related:  * length - Returns the number of elements in an array  *  * Important points:  * 1) Both ireInput and ireOutput are read-only.  * 2) Any changes made to the elements of these arrays will not change the actual values in these arrays once the after script completes.  * 3) Using any other functions e.g. push(), pop(), shift() and unshift() on ireInput and ireOutput arrays directly will result into unexpected errors.  *  * Below is an example of a IRE output payload. There can be more fields/parameters depending on each use case. Refer to the ServiceNow Product Documentation for more examples on the IRE output payload.   * Refer the before script for an example of IRE input payload.  * {  *  'items': [  *    {  *      'className': 'cmdb_ci_computer',  *      'operation': 'INSERT',  *      'sysId': '19ffc57c5b42201006447da52d81c707',  *      'identificationAttempts': [  *        {  *          'identifierName': 'Hardware Rule',  *          'attributes': [  *            'name'  *          ],  *          'attemptResult': 'NO_MATCH',  *          'searchOnTable': 'cmdb_ci_hardware',  *          'hybridEntryCiAttributes': []  *        },  *        {  *          'identifierName': 'Hardware Rule',  *          'attributes': [  *            'mac_address',  *            'name'  *          ],  *          'attemptResult': 'SKIPPED',  *          'searchOnTable': 'cmdb_ci_network_adapter',  *          'hybridEntryCiAttributes': []  *        }  *      ]  *    }  *  ],  *  'additionalCommittedItems': [],  *  'relations': [],  *  'additionalCommittedRelations': [],  *  'hasError': false,  *  'hasWarning': false  * }  *  */  (function(ireOutput, ireInput, runId) {      // Add your code here  })(ireOutput, ireInput, runId);]]></after_script>
        <before_script><![CDATA[/**  *  * Script executed for a given batch before calling the Identification and Reconciliation Engine (IRE)  *  * The following variables are available to the script:  *    'input' - the array where each element of the input array is an object. Each object contains a status, reason, and payload.  *    'runId' - the current import set run id.  *  * Example:  */ // (function(input, runId) { //     for (var i = 0; i < input.length; i++) { //         // Skip all payloads which have a computer starting with name as 'TEST-' //         if (!isComputerNameValid(input[i].payload)) { //             input[i].status = 'SKIPPED'; //             input[i].reason = 'Skipping IRE processing of this payload.'; //         } else { //             // Add new value to items //             input[i].payload.items[0].values.short_description = 'Adding missing description';  //             // Add a new relationship by passing a JSON object (Use unshift() to add a relationship at the beginning) //             // Similarly, any relation can be removed by using the pop() or shift() methods //             var relation = { //                 'parent': 0, //                 'child': 1, //                 'type': 'Runs on::Runs' //             }; //             input[i].payload.relations.push(relation);  //             // Update an existing reference item by passing a JSON object. //             // Similarly, the entire reference items array can also be updated e.g. input[i].payload.referenceItems = {...} //             input[i].payload.referenceItems[0] = { //                 'referenceField': 'software', //                 'referencedBy': 'internal_id2', //                 'referenced': 'internal_id1' //             }; //         } //     } // })(input, runId);  // function isComputerNameValid(payload) { //     for (var i = 0; i < payload.items.length; i++) //         if (payload.items[i].className == 'cmdb_ci_computer' && payload.items[i].values.name.startsWith('TEST-')) //             return false; //     return true; // } /**  * The following properties/functions are available for all parameters of type 'Array' inside the IRE payload e.g. items, relations, referenceItems, lookup and related:  * length - Returns the number of elements in an array  * push() - Add an item to the end of an array  * pop() - Remove an item from the end of an array  * shift() - Remove an item from the beginning of an array  * unshift() - Add an item to the beginning of an array  *  * Important points:  * 1) The before script is executed once per batch and not per payload. The input array elements contain all the payloads for a given batch.  * 2) Each element in the array has only 3 fields i.e. status, reason, and payload. Adding additional fields to the array elements might result in unexpected errors.  * 3) The 'status' can be set to 'SKIPPED' in order to skip a payload in this batch from further processing. Setting 'status' to any other value will be ignored by the RTE processor.  * 4) Optionally, a 'reason' can be set for skipping the payload. This will be the message on the import set run for this particular row.  * 5) To match the batch size after script execution, only the length property is available for input array e.g. input.length   * 6) Using any of the above functions e.g. push(), pop(), shift() and unshift() on input array directly will result in unexpected errors.  *  * Below is an example of an IRE input payload. There can be more fields/parameters depending on each use case. Refer to the ServiceNow Product Documentation for more examples on the IRE payload.  * {  *  'items': [  *    {  *      'className': 'cmdb_ci_computer',  *      'values': {  *        'name': 'Macbook Pro 15',  *        'os_version': '5.1.2600',  *        'ram': '2048',  *        'disk_space': '1024'  *      }  *    }  *  ]  * }  */  (function(input, runId) {      // Add your code here  })(input, runId);]]></before_script>
        <cmdb_inst_application display_value="Scratch App">3f295dfd47d06110c2b79a62736d43da</cmdb_inst_application>
        <description/>
        <execute_after_script>false</execute_after_script>
        <execute_before_script>false</execute_before_script>
        <name>Scratch App Testsd</name>
        <sys_class_name>cmdb_inst_application_feed</sys_class_name>
        <sys_created_by>erik.anderson</sys_created_by>
        <sys_created_on>2023-05-08 14:06:34</sys_created_on>
        <sys_data_source display_value="Scratch App Data Import">599ceaa4473b5110c2b79a62736d43fa</sys_data_source>
        <sys_id>cdf3f03347a22110acb08f22736d4358</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Scratch App Testsd</sys_name>
        <sys_package display_value="SGC Enhancement Suite" source="x_156954_sgc_enhan">8d8f28c647c16110acb08f22736d433f</sys_package>
        <sys_policy/>
        <sys_scope display_value="SGC Enhancement Suite">8d8f28c647c16110acb08f22736d433f</sys_scope>
        <sys_update_name>cmdb_inst_application_feed_cdf3f03347a22110acb08f22736d4358</sys_update_name>
        <sys_updated_by>erik.anderson</sys_updated_by>
        <sys_updated_on>2023-05-08 14:06:34</sys_updated_on>
    </cmdb_inst_application_feed>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="SGC Enhancement Suite">8d8f28c647c16110acb08f22736d433f</application>
        <file_path/>
        <instance_id>8f3db847db8a9d508aea21c4059619e6</instance_id>
        <instance_name>dev136818</instance_name>
        <name>cmdb_inst_application_feed_cdf3f03347a22110acb08f22736d4358</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="cmdb_inst_application_feed"&gt;&lt;cmdb_inst_application_feed action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;after_script&gt;&lt;![CDATA[/**  * Script executed after calling the Identification and Reconciliation Engine (IRE)  *  * The following variables are available to the script:  *    'ireOutput' the array where each element of the array is an object representing the IRE output payload.  *    'ireInput' the array where each element of the array is an object representing the IRE input payload.  *    'runId' the current import set run id.  *      * Example:  */ // (function (ireOutput, ireInput, runId) { //      for (var i = 0; i &lt; ireOutput.length; i++) { //          var output = ireOutput[i]; //          var items = output.items; //          for (var j = 0; j &lt; items.length; j++) { //              gs.info(items[j].className + ': ' + items[j].sysId); //          } //      } // })(ireOutput, ireInput, runId); /**  *  * The following properties/functions are available for all parameters of type 'Array' inside the input and output payloads e.g. items, relations, referenceItems, lookup and related:  * length - Returns the number of elements in an array  *  * Important points:  * 1) Both ireInput and ireOutput are read-only.  * 2) Any changes made to the elements of these arrays will not change the actual values in these arrays once the after script completes.  * 3) Using any other functions e.g. push(), pop(), shift() and unshift() on ireInput and ireOutput arrays directly will result into unexpected errors.  *  * Below is an example of a IRE output payload. There can be more fields/parameters depending on each use case. Refer to the ServiceNow Product Documentation for more examples on the IRE output payload.   * Refer the before script for an example of IRE input payload.  * {  *  'items': [  *    {  *      'className': 'cmdb_ci_computer',  *      'operation': 'INSERT',  *      'sysId': '19ffc57c5b42201006447da52d81c707',  *      'identificationAttempts': [  *        {  *          'identifierName': 'Hardware Rule',  *          'attributes': [  *            'name'  *          ],  *          'attemptResult': 'NO_MATCH',  *          'searchOnTable': 'cmdb_ci_hardware',  *          'hybridEntryCiAttributes': []  *        },  *        {  *          'identifierName': 'Hardware Rule',  *          'attributes': [  *            'mac_address',  *            'name'  *          ],  *          'attemptResult': 'SKIPPED',  *          'searchOnTable': 'cmdb_ci_network_adapter',  *          'hybridEntryCiAttributes': []  *        }  *      ]  *    }  *  ],  *  'additionalCommittedItems': [],  *  'relations': [],  *  'additionalCommittedRelations': [],  *  'hasError': false,  *  'hasWarning': false  * }  *  */  (function(ireOutput, ireInput, runId) {      // Add your code here  })(ireOutput, ireInput, runId);]]&gt;&lt;/after_script&gt;&lt;before_script&gt;&lt;![CDATA[/**  *  * Script executed for a given batch before calling the Identification and Reconciliation Engine (IRE)  *  * The following variables are available to the script:  *    'input' - the array where each element of the input array is an object. Each object contains a status, reason, and payload.  *    'runId' - the current import set run id.  *  * Example:  */ // (function(input, runId) { //     for (var i = 0; i &lt; input.length; i++) { //         // Skip all payloads which have a computer starting with name as 'TEST-' //         if (!isComputerNameValid(input[i].payload)) { //             input[i].status = 'SKIPPED'; //             input[i].reason = 'Skipping IRE processing of this payload.'; //         } else { //             // Add new value to items //             input[i].payload.items[0].values.short_description = 'Adding missing description';  //             // Add a new relationship by passing a JSON object (Use unshift() to add a relationship at the beginning) //             // Similarly, any relation can be removed by using the pop() or shift() methods //             var relation = { //                 'parent': 0, //                 'child': 1, //                 'type': 'Runs on::Runs' //             }; //             input[i].payload.relations.push(relation);  //             // Update an existing reference item by passing a JSON object. //             // Similarly, the entire reference items array can also be updated e.g. input[i].payload.referenceItems = {...} //             input[i].payload.referenceItems[0] = { //                 'referenceField': 'software', //                 'referencedBy': 'internal_id2', //                 'referenced': 'internal_id1' //             }; //         } //     } // })(input, runId);  // function isComputerNameValid(payload) { //     for (var i = 0; i &lt; payload.items.length; i++) //         if (payload.items[i].className == 'cmdb_ci_computer' &amp;&amp; payload.items[i].values.name.startsWith('TEST-')) //             return false; //     return true; // } /**  * The following properties/functions are available for all parameters of type 'Array' inside the IRE payload e.g. items, relations, referenceItems, lookup and related:  * length - Returns the number of elements in an array  * push() - Add an item to the end of an array  * pop() - Remove an item from the end of an array  * shift() - Remove an item from the beginning of an array  * unshift() - Add an item to the beginning of an array  *  * Important points:  * 1) The before script is executed once per batch and not per payload. The input array elements contain all the payloads for a given batch.  * 2) Each element in the array has only 3 fields i.e. status, reason, and payload. Adding additional fields to the array elements might result in unexpected errors.  * 3) The 'status' can be set to 'SKIPPED' in order to skip a payload in this batch from further processing. Setting 'status' to any other value will be ignored by the RTE processor.  * 4) Optionally, a 'reason' can be set for skipping the payload. This will be the message on the import set run for this particular row.  * 5) To match the batch size after script execution, only the length property is available for input array e.g. input.length   * 6) Using any of the above functions e.g. push(), pop(), shift() and unshift() on input array directly will result in unexpected errors.  *  * Below is an example of an IRE input payload. There can be more fields/parameters depending on each use case. Refer to the ServiceNow Product Documentation for more examples on the IRE payload.  * {  *  'items': [  *    {  *      'className': 'cmdb_ci_computer',  *      'values': {  *        'name': 'Macbook Pro 15',  *        'os_version': '5.1.2600',  *        'ram': '2048',  *        'disk_space': '1024'  *      }  *    }  *  ]  * }  */  (function(input, runId) {      // Add your code here  })(input, runId);]]&gt;&lt;/before_script&gt;&lt;cmdb_inst_application display_value="Scratch App"&gt;3f295dfd47d06110c2b79a62736d43da&lt;/cmdb_inst_application&gt;&lt;description/&gt;&lt;execute_after_script&gt;false&lt;/execute_after_script&gt;&lt;execute_before_script&gt;false&lt;/execute_before_script&gt;&lt;name&gt;Scratch App Testsd&lt;/name&gt;&lt;sys_class_name&gt;cmdb_inst_application_feed&lt;/sys_class_name&gt;&lt;sys_created_by&gt;erik.anderson&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2023-05-08 14:06:34&lt;/sys_created_on&gt;&lt;sys_data_source display_value="Scratch App Data Import"&gt;599ceaa4473b5110c2b79a62736d43fa&lt;/sys_data_source&gt;&lt;sys_id&gt;cdf3f03347a22110acb08f22736d4358&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Scratch App Testsd&lt;/sys_name&gt;&lt;sys_package display_value="SGC Enhancement Suite" source="x_156954_sgc_enhan"&gt;8d8f28c647c16110acb08f22736d433f&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="SGC Enhancement Suite"&gt;8d8f28c647c16110acb08f22736d433f&lt;/sys_scope&gt;&lt;sys_update_name&gt;cmdb_inst_application_feed_cdf3f03347a22110acb08f22736d4358&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;erik.anderson&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2023-05-08 14:06:34&lt;/sys_updated_on&gt;&lt;/cmdb_inst_application_feed&gt;&lt;/record_update&gt;</payload>
        <payload_hash>189419256</payload_hash>
        <record_name>Scratch App Testsd</record_name>
        <reverted_from/>
        <source>918f28c647c16110acb08f22736d4342</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>erik.anderson</sys_created_by>
        <sys_created_on>2023-05-08 14:06:34</sys_created_on>
        <sys_id>cdf3f03347a22110acb08f22736d435b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>187fbaf7a6b0000001</sys_recorded_at>
        <sys_updated_by>erik.anderson</sys_updated_by>
        <sys_updated_on>2023-05-08 14:06:34</sys_updated_on>
        <type>CMDB Integration Studio Application Data</type>
        <update_guid>05f3f0335aa221103728d0a8fb9ece5b</update_guid>
        <update_guid_history>05f3f0335aa221103728d0a8fb9ece5b:189419256</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="Scratch App Testsd">4306303347a22110acb08f22736d4383</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>erik.anderson</sys_created_by>
        <sys_created_on>2023-05-08 14:15:42</sys_created_on>
        <sys_db_object display_value="" name="cmdb_inst_application_feed">cmdb_inst_application_feed</sys_db_object>
        <sys_id>0435d47b33b440aca47e571b49cb53a4</sys_id>
        <sys_metadata>cdf3f03347a22110acb08f22736d4358</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Scratch App Testsd</sys_name>
        <sys_package display_value="SGC Enhancement Suite" source="x_156954_sgc_enhan">8d8f28c647c16110acb08f22736d433f</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="SGC Enhancement Suite">8d8f28c647c16110acb08f22736d433f</sys_scope>
        <sys_scope_delete display_value="">0468e50ff2784dd288a8ec6f18d91d29</sys_scope_delete>
        <sys_update_name>cmdb_inst_application_feed_cdf3f03347a22110acb08f22736d4358</sys_update_name>
        <sys_update_version display_value="cmdb_inst_application_feed_cdf3f03347a22110acb08f22736d4358">cdf3f03347a22110acb08f22736d435b</sys_update_version>
        <sys_updated_by>erik.anderson</sys_updated_by>
        <sys_updated_on>2023-05-08 14:15:42</sys_updated_on>
    </sys_metadata_delete>
</record_update>
